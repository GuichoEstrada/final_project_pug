link(rel="stylesheet", href="../../public/assets/css/header.css")
link(rel="stylesheet", href="../../public/assets/css/styles.css")
link(rel="icon" type="image/x-icon" href="/public/assets/images/favicon.png")
link(rel="preconnect" href="https://fonts.googleapis.com")
link(rel="preconnect" href="https://fonts.gstatic.com" crossorigin)
link(href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet")
link(href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Pacifico&display=swap" rel="stylesheet")

html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport", content="width=device-width, initial-scale=1.0")
    title Restaurant List
  body.body
    block content
      include ../partials/header
      main.content
        if showNotification
          p.restaurant-added-notification.fadeOut New Restaurant added successfully!
        h1.title All Restaurants
        ul.restaurant-card-container
          each restaurant in restaurants
            li.restaurant-card(id=`restaurant-${restaurant.restaurant_id}`)
              div.restaurant-details
                p Restaurant ID: #{restaurant.restaurant_id}
                p Name: #{restaurant.name}
                if restaurant.address
                  p Address: 
                    | #{restaurant.address.street} #{restaurant.address.building},
                    | #{restaurant.address.zipcode}
                else
                  p Address: N/A
                p Borough: #{restaurant.borough}
                p Cuisine: #{restaurant.cuisine}
              div.restaurant-actions
                button.update-button(type="button")
                  i.fas.fa-sync
                button.delete-button(type="button" data-restaurant-id=restaurant.restaurant_id)
                  i.fas.fa-trash-alt
        // Pagination code
        if pages && pages.length > 1
          nav.pagination-nav
            ul.pagination-list
              li.pagination-item
                a.pagination-link(href=`/api/restaurants?page=${currentPage - 1}` class=(currentPage === 1 ? 'disabled' : '')) Prev
              each page in pages.slice(0, 10)
                li.pagination-item(class=(page === currentPage ? 'active' : ''))
                  a.pagination-link(href=`/api/restaurants?page=${page}`)= page
              if pages.length > 10
                // Add a ">>" button for the next set of 10 pages
                li.pagination-item
                  a.pagination-link(href=`/api/restaurants?page=${pages[9] + 1}`) &raquo;
              li.pagination-item
                a.pagination-link(href=`/api/restaurants?page=${currentPage + 1}` class=(currentPage === totalPages ? 'disabled' : '')) Next
        // Pagination code
      include ../partials/footer
      script.
        async function deleteRestaurant(restaurantId) {
            console.log(restaurantId);
            try {
                // Send a DELETE request to the server to delete the restaurant
                const response = await fetch(`/api/restaurants/${restaurantId}`, {
                    method: 'DELETE',
                });
                console.log(`/api/restaurants/${restaurantId}`);
            } catch (error) {
                console.error('Error deleting restaurant:', error.message);
                alert('Error deleting restaurant. Please try again.');
            }
        }

        // Attach click event handlers to the delete buttons
        document.addEventListener('DOMContentLoaded', function() {
            const deleteButtons = document.querySelectorAll('.delete-button');

            deleteButtons.forEach(button => {
                button.addEventListener('click', function() {
                    const restaurantId = button.dataset.restaurantId;
                    deleteRestaurant(restaurantId);
                });
            });
        });